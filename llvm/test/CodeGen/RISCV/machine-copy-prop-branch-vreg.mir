# NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
# RUN: llc -mtriple=riscv32 %s -o - -debug
# RUNs: llc -mtriple=riscv32 %s -run-pass=machine-cp -o - | FileCheck %s
# RUNs: llc -mtriple=riscv32 %s -start-before=machine-cp -o - | FileCheck %s --check-prefix=ASM
## Check that the zero constant register is not spilled to the stack here.
--- |
  define i32 @foo(i32 %a, i32 %b) nounwind {
  ; ASM-LABEL: foo:
  ; ASM:       # %bb.0:
  ; ASM-NEXT:    addi sp, sp, -16
  ; ASM-NEXT:    sw s2, 12(sp) # 4-byte Folded Spill
  ; ASM-NEXT:    li s2, 0
  ; ASM-NEXT:    bltz a0, .LBB0_2
  ; ASM-NEXT:  # %bb.1:
  ; ASM-NEXT:    mv a0, a1
  ; ASM-NEXT:  .LBB0_2:
  ; ASM-NEXT:    mv a1, s2
  ; ASM-NEXT:    lw s2, 12(sp) # 4-byte Folded Reload
  ; ASM-NEXT:    addi sp, sp, 16
  ; ASM-NEXT:    ret
    ret i32 0
  }
...
---
name: foo
body: |
  bb.0:
    liveins: $x10, $x11
    %0:gpr = COPY $x0
    %1:gpr = COPY $x10
    %2:gpr = COPY $x11
    BLT %1:gpr, %0:gpr, %bb.2

  bb.1:
    liveins: $x10, $x11
    BLT %0:gpr, %2:gpr, %bb.2

  bb.2:
    liveins: $x10, $x11
    $x11 = COPY killed %0:gpr
    PseudoRET implicit $x10, implicit $x11
